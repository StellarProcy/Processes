========================Receiver===============================

#!/usr/bin/env ruby
require 'bunny'

connection = Bunny.new(automatically_recover: false)
connection.start

channel = connection.create_channel
queue = channel.queue('hello')

begin
  puts ' [*] Waiting for messages. To exit press CTRL+C'
  queue.subscribe(block: true) do |_delivery_info, _properties, body|
    puts " [x] Received #{body}"
  end
rescue Interrupt => _
  connection.close

  exit(0)
end

=========================Sender==============================

#!/usr/bin/env ruby
require 'bunny'

connection = Bunny.new(automatically_recover: false)
connection.start

channel = connection.create_channel
queue = channel.queue('hello')

channel.default_exchange.publish('Privet, this is message!', routing_key: queue.name)
puts " [x] Sent 'Privet, this is message!'"

connection.close

=====================Receiver log============================

procy@procyLaptop:~$ cd RabbitMQ/
procy@procyLaptop:~/RabbitMQ$ ruby receive.rb
 [*] Waiting for messages. To exit press CTRL+C
 [x] Received Privet, this is message!
 [x] Received Privet, this is message!
 [x] Received Privet, this is message!
 [x] Received Privet, this is message!

=====================Sender log=====================

procy@procyLaptop:~$ cd RabbitMQ/
procy@procyLaptop:~/RabbitMQ$ ruby send.rb 
 [x] Sent 'Privet, this is message!'
procy@procyLaptop:~/RabbitMQ$ ruby send.rb 
 [x] Sent 'Privet, this is message!'
procy@procyLaptop:~/RabbitMQ$ ruby send.rb 
 [x] Sent 'Privet, this is message!'
procy@procyLaptop:~/RabbitMQ$ ruby send.rb 
 [x] Sent 'Privet, this is message!'

